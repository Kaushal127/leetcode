Given an integer n, return the least number of perfect square numbers that sum to n.

A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

 

Example 1:

Input: n = 12
Output: 3
Explanation: 12 = 4 + 4 + 4.
Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
 

Constraints:

1 <= n <= 104



class Solution {
    int[] dp ;
    public int numSquares(int n) {
        dp = new int[n+1] ;
        Arrays.fill(dp,-1) ;
        int ans = helper(n,dp) ;
        return ans ;
    }
    private int  helper(int n , int[] dp){
        if (n==0 || n==1){
            return n ;
        }
        if (dp[n]!=-1){
            return dp[n] ;
        }
        int temp = Integer.MAX_VALUE ;
         for (int k=1 ;k*k<=n ;k++){
             int spa = helper(n-k*k , dp) ;
             temp = Math.min (temp , spa) ;
         }
         dp[n] = temp+1 ;

         return temp+1 ; 
    }
}